# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{
  config,
  lib,
  modulesPath,
  ...
}: {
  imports = [
    (modulesPath + "/installer/scan/not-detected.nix")
  ];

  boot.initrd.availableKernelModules = ["ahci" "xhci_pci" "usb_storage" "usbhid" "sd_mod"];
  boot.initrd.kernelModules = [];
  boot.kernelModules = ["kvm-intel"];
  boot.extraModulePackages = [];

  fileSystems."/" = {
    device = "/dev/disk/by-uuid/fe2fb790-4cef-4a5b-bc07-acdc48750830";
    fsType = "ext4";
  };

  swapDevices = [
    {device = "/dev/disk/by-uuid/7c5c5a04-238b-4f78-ada7-66b6cd1aa07e";}
  ];

  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  # networking.useDHCP = lib.mkDefault true;
  networking.interfaces.enp1s0.useDHCP = lib.mkDefault false;
  networking.interfaces.enp2s0.useDHCP = lib.mkDefault true;
  networking.interfaces.enp3s0.useDHCP = lib.mkDefault true;
  networking.interfaces.enp4s0.useDHCP = lib.mkDefault true;

  # satic IP for enp1s0
  systemd.network.enable = true;
  systemd.network.networks."50-enp1s0" = {
    matchConfig.Name = "enp1s0";

    networkConfig = {
      DHCP = "ipv6";
      Address = "192.168.0.15/24";
      Gateway = "192.168.0.1";
      DNS = "192.168.0.1";
    };

    dhcpV6Config.UseDNS = "yes";
  };

  nixpkgs.hostPlatform = lib.mkDefault "x86_64-linux";
  hardware.cpu.intel.updateMicrocode = lib.mkDefault config.hardware.enableRedistributableFirmware;
}
